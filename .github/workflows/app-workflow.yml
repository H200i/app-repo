name: app-workflow

on: 
   push:
     branches:
      - main
     paths:
      - 'src/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Build with Maven
        run: |
         mvn --batch-mode --update-snapshots package
         mkdir staging && cp target/*.jar staging
     
      - uses: actions/upload-artifact@v3
        with:
         name: Package
         path: staging
         
  Image-push:
    runs-on: ubuntu-latest
    needs: build
    
    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
         IMAGE_TAG: "latest"

         run: |
          # Build a docker container and push it to ECR 
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            echo "Pushing image to ECR..."
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
         
  Deploy:
     runs-on: ubuntu-latest
     needs: Image-push
    
     steps:
       - name: deploy
         run:  echo
